{"version":3,"sources":["serviceWorker.js","components/Header/Header.styles.js","theme/theme.reducer.js","components/Header/Header.js","API/API.js","components/Home/celciumConverter.actions.js","theme/theme.js","components/Home/Home.styles.js","components/Home/Home.js","components/Home/Home.actions.js","components/Favorites/Favorites.actions.js","components/Favorites/Favorites.styles.js","components/Favorites/Favorites.js","components/App.js","Root.js","middleware/logger.js","enhancers/monitorReducer.js","components/Home/Home.reducer.js","components/Favorites/Favorites.reducer.js","configureStore/root.reducer.js","index.js","configureStore/index.js"],"names":["Boolean","window","location","hostname","match","AppContainer","withStyles","root","position","boxShadow","AppBar","HTitle","color","fontWeight","flexGrow","whiteSpace","Typography","HButton","marginLeft","textDecoration","Button","ThemeButton","border","borderRadius","ToggleButton","ThemeIcon","BrightnessMediumRoundedIcon","initialState","themeMode","AdapterLink","React","forwardRef","props","ref","innerRef","Header","state","selected","changeThemeHandler","doChangeTheme","setState","this","Toolbar","to","component","value","onChange","Component","connect","dispatch","type","changeTheme","API_KEY","process","API_HOST","autoCompleteUrl","query","autoCompleteUrlCurrentCondition","cityKey","autoCompleteUrlFiveDay","autoCompleteUrlGeoPosition","lat","lon","getAutoComplete","a","axios","get","response","data","console","log","getGeoPosition","getDailyForecast","getFiveDayForecast","theme","createMuiTheme","overrides","MuiAppBar","colorPrimary","backgroundColor","MuiCardContent","borderBottomColor","padding","SearchContainer","display","marginTop","justifyContent","marginBottom","Container","SearchPaper","flexDirection","width","Paper","ForecastContainer","maxWidth","ForecastPaper","OneDayGridContainer","breakpoints","up","Grid","OneDayPaper","minWidth","down","FavoriteHiddenBtn","TypographyCity","fontSize","alignItems","TypographyDate","TypographyTemp","ToggleFahrCel","AvatarIcon","alignSelf","Avatar","FButton","height","FIcon","FavoriteIcon","FTypography","fontFamily","FiveDayGridCont","overflow","flexWrap","FiveDayGridItem","FiveDayGrid","TypographyDay","TypographyMin","TypographyMax","Home","favColor","measure","addFavoritesHandler","city","doAddFavoritesHandler","checkCityInFav","fav","localStorage","item","changeMeasurementHandler","event","newMeasure","obj","daily","doConvertCelsToFahr","doConvertFahrToCels","doLoadDailyForecast","doLoadFiveDayForecast","prevProps","prevState","oneDay","doLoadCitiesList","doGetSelectedCity","selectedCity","favoritesBtn","Fragment","loadOptions","container","style","onClick","date","metricTemp","imperialTemp","ToggleButtonGroup","exclusive","size","src","weatherIcon","alt","text","map","d","key","margin","fiveDayIcon","min","max","home","notification","then","payload","catch","err","message","loadDailyForecast","loadFiveDayForecast","inputValue","callback","tempArr","forEach","i","push","label","LocalizedName","Key","loadCitiesList","getSelectedCity","setItem","addToFavorites","tmp","Math","round","convertCelsToFahr","convertFahrToCels","FDIcon","cursor","DeleteIcon","FContainer","ItemCard","Card","FGrid","maxHeight","FPaper","Favorites","getFavoriteCityHandler","doLoadFavoritesCity","history","deleteFavoritesHandler","arr","favorites","doDeleteFavoritesCity","length","doLoadFavoritesList","favorite","Object","entries","removeItem","deleteFavoritesCity","loadFavoritesCity","App","exact","path","Root","darkTheme","palette","store","CssBaseline","logger","next","action","group","info","result","getState","groupEnd","monitorReducerEnhancer","createStore","reducer","enhancer","number","start","performance","now","newState","end","diff","rootReducer","combineReducers","weekday","Date","LocalObservationDateTime","Temperature","Metric","Value","Imperial","WeatherText","oneDayIcon","WeatherIcon","getDay","getHours","getMinutes","shortWeekday","DailyForecasts","Maximum","Minimum","Day","Icon","fiveDaysArr","middlewares","thunkMiddleware","loggerMiddleware","enhancers","applyMiddleware","monitorReducersEnhancer","composedEnhansers","composeWithDevTools","configureStore","options","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","alert","coords","latitude","longitude","ReactDOM","render","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.802f1dfb.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { withStyles } from '@material-ui/core/styles'\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Button from '@material-ui/core/Button'\r\nimport ToggleButton from '@material-ui/lab/ToggleButton'\r\nimport BrightnessMediumRoundedIcon from '@material-ui/icons/BrightnessMediumRounded';\r\n\r\nexport const AppContainer = withStyles({\r\n    root: {\r\n        position: 'static',\r\n        boxShadow: '0px 1px 1px -1px rgba(0,0,0,0.12)'\r\n    }\r\n})(AppBar)\r\nexport const HTitle = withStyles({\r\n    root: {\r\n        color: 'grey',\r\n        fontWeight: 600,\r\n        flexGrow: 1,\r\n        whiteSpace: 'nowrap'\r\n    }\r\n})(Typography)\r\nexport const HButton = withStyles({\r\n    root: {\r\n        color: 'grey',\r\n        marginLeft: '5px',\r\n        textDecoration: 'none',\r\n        fontWeight: 400\r\n    }\r\n})(Button)\r\nexport const ThemeButton = withStyles({\r\n    root: {\r\n        border: 'none',\r\n        borderRadius: '25px'\r\n    }\r\n})(ToggleButton)\r\nexport const ThemeIcon = withStyles({\r\n    root: {\r\n    }\r\n})(BrightnessMediumRoundedIcon)","const DARK_THEME = 'DARK_THEME'\r\nconst LIGHT_THEME = 'LIGHT_THEME'\r\n\r\nlet initialState = {\r\n    themeMode: 'light'\r\n}\r\nexport const changeTheme = (selected) => {\r\n    return (dispatch) => {\r\n        if (!selected) {\r\n            dispatch({ type: DARK_THEME })\r\n        } else {\r\n            dispatch({ type: LIGHT_THEME })\r\n        }\r\n    }\r\n}\r\nexport const themeReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case LIGHT_THEME:\r\n            return {\r\n                ...state,\r\n                themeMode: 'light'\r\n            }\r\n        case DARK_THEME:\r\n\r\n            return {\r\n                ...state,\r\n                themeMode: 'dark'\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { AppContainer, HTitle, HButton, ThemeIcon, ThemeButton} from './Header.styles'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\n\r\nimport { changeTheme } from '../../theme/theme.reducer'\r\n\r\nconst AdapterLink = React.forwardRef((props, ref) => <Link innerRef={ref} {...props} />)\r\n\r\nclass Header extends Component {\r\n    state = {\r\n        selected: false,\r\n    }\r\n    changeThemeHandler = () => {\r\n        let selected = this.state.selected\r\n        if (!selected) {\r\n            this.props.doChangeTheme(selected)\r\n            this.setState({\r\n                selected: true\r\n            })\r\n        } else {\r\n            this.props.doChangeTheme(selected)\r\n            this.setState({\r\n                selected: false,\r\n            })\r\n        }\r\n    }\r\n    render() {\r\n        const { selected } = this.state\r\n        return (\r\n            <AppContainer>\r\n                <Toolbar>\r\n                    <HTitle>Forecast Application</HTitle>\r\n                    <HButton to='/' component={AdapterLink}>HOME</HButton>\r\n                    <HButton to='/favorites' component={AdapterLink}>FAVORITES</HButton>\r\n                    <ThemeButton value='ThemeIcon'\r\n                        onChange={this.changeThemeHandler}\r\n                        selected={selected}\r\n                    >\r\n                        <ThemeIcon />\r\n                    </ThemeButton>\r\n                </Toolbar>\r\n            </AppContainer>\r\n        )\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        doChangeTheme: (selected) => dispatch(changeTheme(selected)),\r\n    }\r\n}\r\nexport default connect(null, mapDispatchToProps)(Header)","import axios from 'axios'\r\n\r\nconst API_KEY     = process.env.REACT_APP_API_KEY\r\nconst API_HOST    = process.env.REACT_APP_API_HOST\r\nconst API_VERSION = process.env.REACT_APP_API_VERSION\r\n\r\nconst autoCompleteUrl            = (query)          => `${API_HOST}/locations/${API_VERSION}/cities/autocomplete?apikey=${API_KEY}&q=${query}`\r\nconst autoCompleteUrlCurrentCondition = (cityKey)   => `${API_HOST}/currentconditions/${API_VERSION}/${cityKey}?apikey=${API_KEY}`\r\nconst autoCompleteUrlFiveDay     = (cityKey)        => `${API_HOST}/forecasts/${API_VERSION}/daily/5day/${cityKey}?apikey=${API_KEY}&metric=true`\r\nconst autoCompleteUrlGeoPosition = (lat, lon)       => `${API_HOST}/locations/${API_VERSION}/cities/geoposition/search?apikey=${API_KEY}&q=${lat}%20%2C%20${lon}%20&toplevel=false`\r\n\r\nexport const getAutoComplete = async (query) => {\r\n    try {\r\n        const response = await axios.get(autoCompleteUrl(query))\r\n        const data = await response.data\r\n        return data\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}\r\nexport const getGeoPosition = async (lat, lon) => {\r\n    try {\r\n        const response = await axios.get(autoCompleteUrlGeoPosition(lat, lon))\r\n        const data = await response.data\r\n        return data\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}\r\nexport const getDailyForecast = async (cityKey) => {\r\n    try {\r\n        const response = await axios.get(autoCompleteUrlCurrentCondition(cityKey))\r\n        const data = await response.data\r\n        return data\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}\r\nexport const getFiveDayForecast = async (cityKey) => {\r\n    try {\r\n        const response = await axios.get(autoCompleteUrlFiveDay(cityKey))\r\n        const data = await response.data\r\n        return data\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}\r\n\r\n\r\n","export const CONVERT_TO_CELSIUM = 'CONVERT_TO_CELSIUM'\r\nexport const CONVERT_TO_FAHRENHEIT = 'CONVERT_TO_FAHRENHEIT'\r\n\r\nexport const convertCelsToFahr = (obj) => {\r\n    return dispatch => {\r\n        const tmp = []\r\n        obj.forEach(i => {\r\n            const min = Math.round((i.min * 1.8) + 32)\r\n            const max = Math.round((i.max * 1.8) + 32)\r\n            const obj = {\r\n                ...i,\r\n                min: min,\r\n                max: max\r\n            }\r\n            return tmp.push(obj)\r\n        })\r\n        dispatch({\r\n            type: CONVERT_TO_FAHRENHEIT,\r\n            payload: tmp\r\n        })\r\n    }\r\n}\r\nexport const convertFahrToCels = (obj) => {\r\n    return dispatch => {\r\n        const tmp = []\r\n        obj.forEach(i => {\r\n            const min = Math.round((i.min - 32) * 0.555)\r\n            const max = Math.round((i.max - 32) * 0.555)\r\n            const obj = {\r\n                ...i,\r\n                min: min,\r\n                max: max\r\n            }\r\n            return tmp.push(obj)\r\n        })\r\n        dispatch({\r\n            type: CONVERT_TO_FAHRENHEIT,\r\n            payload: tmp\r\n\r\n        })\r\n    }\r\n}","import { createMuiTheme } from \"@material-ui/core/styles\";\r\n\r\nconst theme = createMuiTheme({\r\n  overrides: {\r\n    MuiAppBar: {\r\n      colorPrimary: {\r\n        backgroundColor: 'transparent'\r\n      }\r\n    },\r\n    MuiCardContent: {\r\n      root: {\r\n        borderBottomColor: 'none',\r\n        \"&:last-child\": {\r\n          padding: '1rem !important',\r\n        }\r\n      }\r\n    }\r\n  }\r\n})\r\nexport default theme","import { withStyles } from '@material-ui/core/styles'\r\nimport theme from './../../theme/theme'\r\nimport Container from '@material-ui/core/Container'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Button from '@material-ui/core/Button'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Avatar from '@material-ui/core/Avatar'\r\nimport FavoriteIcon from '@material-ui/icons/Favorite'\r\nimport ToggleButton from '@material-ui/lab/ToggleButton'\r\n\r\nexport const SearchContainer = withStyles({\r\n    root: {\r\n        display: 'flex',\r\n        marginTop: '1.25rem',\r\n        justifyContent: 'center',\r\n        marginBottom: '1.25rem',\r\n    }\r\n})(Container)\r\nexport const SearchPaper = withStyles({\r\n    root: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        width: '30rem',\r\n        boxShadow: 'none'\r\n    }\r\n})(Paper)\r\nexport const ForecastContainer = withStyles({\r\n    root: {\r\n        maxWidth: '60rem',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        flexDirection: 'column',\r\n    }\r\n})(Container)\r\nexport const ForecastPaper = withStyles({\r\n    root: {\r\n        padding: '1rem',\r\n    }\r\n})(Paper)\r\nexport const OneDayGridContainer = withStyles({\r\n    root: {\r\n        justifyContent: 'space-between',\r\n        [theme.breakpoints.up('xs')]: {\r\n            width: '100%'\r\n        }\r\n    }\r\n})(Grid)\r\nexport const OneDayGridItem = withStyles({\r\n    root: {\r\n    }\r\n})(Grid)\r\nexport const OneDayPaper = withStyles({\r\n    root: {\r\n        padding: '0.5rem 1rem',\r\n        minWidth: '16.875rem',\r\n        [theme.breakpoints.down('xs')]: {\r\n            width: '100%'\r\n        }\r\n    }\r\n})(Paper)\r\nexport const FavoriteHiddenBtn = withStyles({\r\n    root: {\r\n        color: 'grey',\r\n        borderRadius: '25px'\r\n    }\r\n})(Button)\r\nexport const TypographyCity = withStyles({\r\n    root: {\r\n        fontSize: '1.5rem',\r\n        color: 'darkgrey',\r\n        fontWeight: 500,\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        whiteSpace: 'nowrap'\r\n    }\r\n})(Typography)\r\nexport const TypographyDate = withStyles({\r\n    root: {\r\n        fontSize: '1rem',\r\n        color: 'grey',\r\n        fontWeight: 300,\r\n    }\r\n})(Typography)\r\nexport const TypographyTemp = withStyles({\r\n    root: {\r\n        display: 'inline-flex',\r\n        fontSize: '4rem',\r\n        alignItems: 'center'\r\n    }\r\n})(Typography)\r\nexport const ToggleFahrCel = withStyles({\r\n    root: {\r\n        fontSize: '1.3rem',\r\n        fontWeight: 300,\r\n        color: 'black'\r\n    }\r\n})(ToggleButton)\r\nexport const AvatarIcon = withStyles({\r\n    root: {\r\n        alignSelf: 'center'\r\n    }\r\n})(Avatar)\r\nexport const FButton = withStyles({\r\n    root: {\r\n        height: '2.2rem',\r\n        marginTop: '1.25rem',\r\n        whiteSpace: 'nowrap',\r\n        color: 'grey',\r\n        boxShadow: '0px 1px 3px 0px rgba(0,0,0,0.2), 0px 1px 1px 0px rgba(0,0,0,0.14), 0px 2px 1px -1px rgba(0,0,0,0.12)',\r\n        [theme.breakpoints.down('xs')]: {\r\n            display: 'none'\r\n        }\r\n    }\r\n})(Button)\r\nexport const FIcon = withStyles({\r\n    root: {\r\n        display: 'none',\r\n        [theme.breakpoints.down('xs')]: {\r\n            display: 'inline-block'\r\n        }\r\n    }\r\n})(FavoriteIcon)\r\nexport const FTypography = withStyles({\r\n    root: {\r\n        fontSize: '1.5rem',\r\n        display: 'flex',\r\n        fontFamily: 'inherit',\r\n        justifyContent: 'flex-end'\r\n    }\r\n})(Typography)\r\nexport const FiveDayGridCont = withStyles({\r\n    root: {\r\n        justifyContent: 'space-evenly',\r\n        display: 'flex',\r\n        marginTop: '3rem',\r\n        [theme.breakpoints.down('xs')]: {\r\n            flexDirection: 'column',\r\n            overflow: 'scroll',\r\n            height: '14.6875rem',\r\n            flexWrap: 'inherit',\r\n            justifyContent: 'flex-start',\r\n            marginTop: '1rem'\r\n        }\r\n    }\r\n})(Grid)\r\nexport const FiveDayGridItem = withStyles({\r\n    root: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        minWidth: '4rem'\r\n    }\r\n})(Grid)\r\nexport const FiveDayGrid = withStyles({\r\n    root: {\r\n        display: 'flex',\r\n        justifyContent: 'space-around'\r\n    }\r\n})(Grid)\r\nexport const TypographyDay = withStyles({\r\n    root: {\r\n        fontWeight: 500,\r\n        color: 'darkgrey',\r\n        alignSelf: 'center'\r\n    }\r\n})(Typography)\r\nexport const TypographyMin = withStyles({\r\n    root: {\r\n        fontWeight: 400,\r\n        color: 'darkgrey',\r\n        alignSelf: 'center'\r\n    }\r\n})(Typography)\r\nexport const TypographyMax = withStyles({\r\n    root: {\r\n        fontWeight: 400,\r\n        color: 'grey',\r\n        alignSelf: 'center'\r\n    }\r\n})(Typography)","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { loadDailyForecast, loadFiveDayForecast, loadCitiesList, getSelectedCity } from './Home.actions'\r\nimport { addToFavorites } from '../Favorites/Favorites.actions'\r\nimport { convertCelsToFahr, convertFahrToCels } from '../Home/celciumConverter.actions'\r\n\r\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup'\r\nimport { Paper, Container, Grid } from '@material-ui/core'\r\nimport AsyncSelect from 'react-select/async'\r\nimport {\r\n    FIcon, AvatarIcon, FavoriteHiddenBtn, OneDayPaper, TypographyCity, FiveDayGrid,\r\n    FiveDayGridCont, FiveDayGridItem, TypographyDate, TypographyTemp, SearchContainer,\r\n    ForecastContainer, ForecastPaper, SearchPaper, OneDayGridContainer, FButton, FTypography,\r\n    TypographyDay, TypographyMax, TypographyMin, ToggleFahrCel\r\n} from './Home.styles'\r\n\r\nclass Home extends Component {\r\n    state = {\r\n        favColor: false,\r\n        measure: 'celsium',\r\n    }\r\n    componentDidMount() {\r\n        const { city, cityKey, doLoadDailyForecast, doLoadFiveDayForecast } = this.props\r\n        if (cityKey) {\r\n            doLoadDailyForecast(cityKey)\r\n            doLoadFiveDayForecast(cityKey)\r\n        }\r\n        if (city) {\r\n            this.checkCityInFav(city)\r\n        }\r\n    }\r\n    componentDidUpdate(prevProps, prevState) {\r\n        const { city, cityKey, doLoadDailyForecast, doLoadFiveDayForecast } = this.props\r\n        if (this.props.cityKey !== prevProps.cityKey) {\r\n            doLoadDailyForecast(cityKey)\r\n            doLoadFiveDayForecast(cityKey)\r\n        }\r\n        if (this.props.city !== prevProps.city) {\r\n            this.checkCityInFav(city)\r\n        }\r\n    }\r\n    addFavoritesHandler = () => {\r\n        const { city, cityKey, doAddFavoritesHandler } = this.props\r\n        doAddFavoritesHandler(city, cityKey)\r\n        this.setState({\r\n            favColor: true\r\n        })\r\n    }\r\n    checkCityInFav = (city) => {\r\n        let fav = { ...localStorage }\r\n        for (let item in fav) {\r\n            if (item === city) {\r\n                return this.setState({\r\n                    favColor: true\r\n                })\r\n            } else {\r\n                this.setState({\r\n                    favColor: false\r\n                })\r\n            }\r\n        }\r\n    }\r\n    changeMeasurementHandler = (event, newMeasure) => {\r\n        const obj = this.props.daily\r\n        switch (newMeasure) {\r\n            case 'fahrenheit':\r\n                this.props.doConvertCelsToFahr(obj)\r\n                return this.setState({\r\n                    measure: 'fahrenheit',\r\n                })\r\n            case 'celsium':\r\n                this.props.doConvertFahrToCels(obj)\r\n                return this.setState({\r\n                    measure: 'celsium',\r\n                })\r\n            default:\r\n                return this.state\r\n        }\r\n    }\r\n    render() {\r\n        const { oneDay, daily, city } = this.props\r\n        const { doLoadCitiesList, doGetSelectedCity, selectedCity } = this.props\r\n        const { favColor, measure } = this.state\r\n        const favoritesBtn = { color: (favColor ? 'red' : '') }\r\n        return (\r\n            <React.Fragment>\r\n                <Container>\r\n                    <SearchContainer>\r\n                        <SearchPaper>\r\n                            <AsyncSelect\r\n                                value={selectedCity}\r\n                                loadOptions={doLoadCitiesList}\r\n                                onChange={doGetSelectedCity}\r\n                            />\r\n                        </SearchPaper>\r\n                    </SearchContainer>\r\n                    <ForecastContainer>\r\n                        <ForecastPaper>\r\n                            <OneDayGridContainer container>\r\n                                <OneDayPaper>\r\n                                    <Grid item style={{ justifyContent: 'space-between', flexWrap: 'nowrap', display: 'flex' }}>\r\n                                        <TypographyCity>{city}</TypographyCity>\r\n                                        <FavoriteHiddenBtn>\r\n                                            <FIcon style={favoritesBtn} onClick={this.addFavoritesHandler}></FIcon>\r\n                                        </FavoriteHiddenBtn>\r\n                                    </Grid>\r\n                                    <TypographyDate>{oneDay.date}</TypographyDate>\r\n                                    <Grid container style={{ justifyContent: 'flex-end' }}>\r\n                                        <TypographyTemp>\r\n                                            {measure === 'celsium' ? oneDay.metricTemp : oneDay.imperialTemp}\r\n                                        </TypographyTemp>\r\n                                        <ToggleButtonGroup exclusive\r\n                                            onChange={this.changeMeasurementHandler}\r\n                                            value={measure}\r\n                                            size='medium'\r\n                                            style={{ alignSelf: 'center' }}>\r\n                                            <ToggleFahrCel value='celsium'>{'C°'}</ToggleFahrCel>\r\n                                            <ToggleFahrCel value='fahrenheit'>{'F°'}</ToggleFahrCel>\r\n                                        </ToggleButtonGroup>\r\n                                    </Grid>\r\n                                    <FTypography component='div'>\r\n                                        <AvatarIcon src={\"https://raw.githubusercontent.com/SejoB/Sergey-Bekker-04-09-2019/master/public/weatherIcons/\" + oneDay.weatherIcon + \"-s.png\"} alt='icon' />\r\n                                        {oneDay.text}\r\n                                    </FTypography>\r\n                                </OneDayPaper>\r\n                                <Grid item>\r\n                                    <FButton style={favoritesBtn} onClick={this.addFavoritesHandler}>Add to Favorites</FButton>\r\n                                </Grid>\r\n                            </OneDayGridContainer>\r\n                            <FiveDayGridCont container>\r\n                                {daily.map((d, key) => {\r\n                                    return <Paper key={key} style={{ padding: '0.5rem', margin: '0.5rem' }}>\r\n                                        <FiveDayGridItem item>\r\n                                            <AvatarIcon src={\"https://raw.githubusercontent.com/SejoB/Sergey-Bekker-04-09-2019/master/public/weatherIcons/\" + d.fiveDayIcon + \"-s.png\"} alt='icon' />\r\n                                            <TypographyDay>{d.date}</TypographyDay>\r\n                                            <FiveDayGrid>\r\n                                                <TypographyMin>{d.min}{'°'}</TypographyMin>\r\n                                                <TypographyMax>{d.max}{'°'}</TypographyMax>\r\n                                            </FiveDayGrid>\r\n                                        </FiveDayGridItem>\r\n                                    </Paper>\r\n                                })}\r\n                            </FiveDayGridCont>\r\n                        </ForecastPaper>\r\n                    </ForecastContainer>\r\n                </Container>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    const {\r\n        cityKey,\r\n        city,\r\n        oneDay,\r\n        daily,\r\n        notification,\r\n    } = state.home\r\n    return {\r\n        cityKey,\r\n        city,\r\n        oneDay,\r\n        daily,\r\n        notification,\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        doLoadDailyForecast: (cityKey) => dispatch(loadDailyForecast(cityKey)),\r\n        doLoadFiveDayForecast: (cityKey) => dispatch(loadFiveDayForecast(cityKey)),\r\n        doLoadCitiesList: (inputValue, callback) => dispatch(loadCitiesList(inputValue, callback)),\r\n        doGetSelectedCity: (selectedCity) => dispatch(getSelectedCity(selectedCity)),\r\n        doAddFavoritesHandler: (city, cityKey) => dispatch(addToFavorites(city, cityKey)),\r\n        doConvertCelsToFahr: (obj) => dispatch(convertCelsToFahr(obj)),\r\n        doConvertFahrToCels: (obj) => dispatch(convertFahrToCels(obj))\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home)\r\n\r\n","import { getDailyForecast, getFiveDayForecast, getGeoPosition, getAutoComplete } from '../../API/API'\r\n\r\nexport const FETCHING_LOCATION = 'FETCHING_LOCATION'\r\nexport const FETCHED_LOCATION = 'FETCHED_LOCATION'\r\nexport const LOCATION_ERROR = 'LOCATION_ERROR'\r\n\r\nexport const LOADING_DAILY_FORECAST = 'LOADING_DAILY_FORECAST'\r\nexport const DAILY_FORECAST_LOADED = 'DAILY_FORECAST_LOADED'\r\nexport const DAILY_FORECAST_ERROR = 'DAILY_FORECAST_ERROR'\r\n\r\nexport const LOADING_FIVE_DAY_FORECAST = 'LOADING_FIVE_DAY_FORECAST'\r\nexport const FIVE_DAY_FORECAST_LOADED = 'FIVE_DAY_FORECAST_LOADED'\r\nexport const FIVE_DAY_FORECAST_ERROR = 'FIVE_DAY_FORECAST_ERROR'\r\n\r\nexport const LOADING_CITIES_LIST = 'LOADING_CITIES_LIST'\r\nexport const CITIES_LIST_LOADED = 'CITIES_LIST_LOADED'\r\nexport const CITIES_LIST_ERROR = 'CITIES_LIST_ERROR'\r\n\r\nexport const GET_SELECTED_CITY = 'GET_SELECTED_CITY'\r\n\r\nexport const getPosition = () => {\r\n    return (dispatch) => {\r\n        dispatch({ type: FETCHING_LOCATION })\r\n        const getLatLon = function (options) {\r\n            return new Promise(function (resolve, reject) {\r\n                if (navigator.geolocation) {\r\n                    navigator.geolocation.getCurrentPosition(resolve, reject, options)\r\n                } else {\r\n                    alert('Geolocation is not enabled')\r\n                }\r\n            })\r\n        }\r\n        getLatLon()\r\n            .then((position) => {\r\n                const lat = position.coords.latitude\r\n                const lon = position.coords.longitude\r\n                getGeoPosition(lat, lon)\r\n                    .then(data =>\r\n                        dispatch({\r\n                            type: FETCHED_LOCATION,\r\n                            payload: data\r\n                        })\r\n                    )\r\n            })\r\n            .catch(err =>\r\n                dispatch({\r\n                    type: LOCATION_ERROR,\r\n                    payload: err.message\r\n                })\r\n            )\r\n    }\r\n}\r\nexport const loadDailyForecast = (cityKey) => {\r\n    return dispatch => {\r\n        dispatch({ type: LOADING_DAILY_FORECAST })\r\n        getDailyForecast(cityKey)\r\n            .then((data) => {\r\n                dispatch({\r\n                    type: DAILY_FORECAST_LOADED,\r\n                    payload: data\r\n                })\r\n            })\r\n            .catch(err =>\r\n                dispatch({\r\n                    type: DAILY_FORECAST_ERROR,\r\n                    payload: err.message\r\n                })\r\n            )\r\n    }\r\n}\r\nexport const loadFiveDayForecast = (cityKey) => {\r\n    return dispatch => {\r\n        dispatch({ type: LOADING_FIVE_DAY_FORECAST })\r\n        getFiveDayForecast(cityKey)\r\n            .then((data) => {\r\n                dispatch({\r\n                    type: FIVE_DAY_FORECAST_LOADED,\r\n                    payload: data\r\n                })\r\n            })\r\n            .catch(err =>\r\n                dispatch({\r\n                    type: FIVE_DAY_FORECAST_ERROR,\r\n                    payload: err.message\r\n                })\r\n            )\r\n    }\r\n}\r\nexport const loadCitiesList = (inputValue, callback) => {\r\n    return dispatch => {\r\n        dispatch({ type: LOADING_CITIES_LIST })\r\n        let tempArr = []\r\n        getAutoComplete(inputValue)\r\n            .then((data) => {\r\n                dispatch({\r\n                    type: CITIES_LIST_LOADED,\r\n                })\r\n                data.forEach(i => {\r\n                    tempArr.push({ label: i.LocalizedName, key: i.Key })\r\n                })\r\n                callback(tempArr)\r\n            })\r\n            .catch(err =>\r\n                dispatch({\r\n                    type: CITIES_LIST_ERROR,\r\n                    payload: err.message\r\n                })\r\n            )\r\n    }\r\n}\r\nexport const getSelectedCity = (selectedCity) => {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: GET_SELECTED_CITY,\r\n            payload: selectedCity\r\n        })\r\n    }\r\n}\r\n","export const ADD_TO_FAVORITE = 'ADD_TO_FAVORITE'\r\nexport const DELETE_FROM_FAVORITE = 'DELETE_FROM_FAVORITE'\r\nexport const LOAD_FAVORITE_LIST = 'LOAD_FAVORITE_LIST'\r\nexport const LOAD_CITY_FROM_FAVORITES = 'LOAD_CITY_FROM_FAVORITES'\r\n\r\nexport const addToFavorites = (city, cityKey) => {\r\n    return dispatch => {\r\n        dispatch({ type: ADD_TO_FAVORITE })\r\n        localStorage.setItem(city, cityKey)\r\n    }\r\n}\r\nexport const loadFavoritesList = () => {\r\n    return dispatch => {\r\n        const fav = { ...localStorage }\r\n        const items = Object.entries(fav)\r\n        dispatch({\r\n            type: LOAD_FAVORITE_LIST,\r\n            payload: items\r\n        })\r\n    }\r\n}\r\nexport const deleteFavoritesCity = (value) => {\r\n    return dispatch => {\r\n        localStorage.removeItem(value)\r\n        const fav = { ...localStorage }\r\n        const items = Object.entries(fav)\r\n        dispatch({\r\n            type: DELETE_FROM_FAVORITE,\r\n            payload: items\r\n        })\r\n    }\r\n}\r\nexport const loadFavoritesCity = (value) => {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: LOAD_CITY_FROM_FAVORITES,\r\n            payload: value\r\n        })\r\n    }\r\n}\r\n","import { withStyles } from '@material-ui/core/styles'\r\n\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Container from '@material-ui/core/Container'\r\nimport Card from '@material-ui/core/Card'\r\n\r\nexport const FDIcon = withStyles({\r\n    root: {\r\n        cursor: 'pointer',\r\n        color: 'darkgrey'\r\n    }\r\n})(DeleteIcon)\r\nexport const FContainer = withStyles({\r\n    root: {\r\n        display: 'flex',\r\n        maxWidth: '38rem'\r\n    }\r\n})(Container)\r\nexport const ItemCard = withStyles({\r\n    root: {\r\n        height: '4rem',\r\n        width: '20rem',\r\n        margin: '1rem 0 1rem 0',\r\n        padding: '1rem',\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center'\r\n    }\r\n})(Card)\r\nexport const FTypography = withStyles({\r\n    root: {\r\n        fontSize: '2rem',\r\n        color: 'darkgrey',\r\n        fontWeight: 500,\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        cursor: 'pointer',\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap'\r\n    }\r\n})(Typography)\r\nexport const FGrid = withStyles({\r\n    root: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        maxHeight: '85vh',\r\n        flexWrap: 'nowrap',\r\n        padding: '0 2rem 0 2rem',\r\n        overflow: 'overlay'\r\n    }\r\n})(Grid)\r\nexport const FPaper = withStyles({\r\n    root: {\r\n        marginTop: '1rem'\r\n    }\r\n})(Paper)","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { loadFavoritesList, deleteFavoritesCity, loadFavoritesCity } from './Favorites.actions'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport { FContainer, ItemCard, FTypography, FPaper, FGrid, FDIcon } from './Favorites.styles'\r\n\r\nclass Favorites extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.doLoadFavoritesList()\r\n    }\r\n    getFavoriteCityHandler = (value) => {\r\n        this.props.doLoadFavoritesCity(value)\r\n        this.props.history.push('/')\r\n    }\r\n    deleteFavoritesHandler = (value) => {\r\n        const arr = this.props.favorites\r\n        this.props.doDeleteFavoritesCity(value)\r\n        if (arr.length <= 1) {\r\n            this.props.history.push('/')\r\n        }\r\n    }\r\n    render() {\r\n        const favorites = this.props.favorites\r\n        return (\r\n            <FContainer>\r\n                <FPaper>\r\n                    <FGrid container>\r\n                        {favorites.map((value, key) => (\r\n                            <Grid item key={key}>\r\n                                <ItemCard>\r\n                                    <FTypography onClick={() => this.getFavoriteCityHandler(value)}>{value[0]}</FTypography>\r\n                                    <FDIcon onClick={() => this.deleteFavoritesHandler(value[0])} />\r\n                                </ItemCard>\r\n                            </Grid>\r\n                        ))}\r\n                    </FGrid>\r\n                </FPaper>\r\n            </FContainer>\r\n\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    const {\r\n        favorites\r\n    } = state.favorite\r\n    return {\r\n        favorites\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        doLoadFavoritesList: () => dispatch(loadFavoritesList()),\r\n        doDeleteFavoritesCity: (value) => dispatch(deleteFavoritesCity(value)),\r\n        doLoadFavoritesCity: (value) => dispatch(loadFavoritesCity(value))\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Favorites)\r\n","import React, { Component } from 'react'\r\nimport { Route, Switch } from \"react-router-dom\"\r\n\r\nimport Header from './Header/Header'\r\nimport Home from './Home/Home'\r\nimport Favorites from './Favorites/Favorites'\r\n\r\nclass App extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Header />\r\n        <Switch>\r\n          <Route exact path='/' component={Home}></Route>\r\n          <Route path='/favorites' component={Favorites}></Route>\r\n          <Route exact path='/' component={Home}></Route>\r\n        </Switch>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\nexport default App\r\n","import React, { Component } from 'react'\r\nimport { HashRouter } from 'react-router-dom'\r\nimport { Provider, connect } from 'react-redux'\r\n\r\nimport MuiThemeProvider from '@material-ui/core/styles/MuiThemeProvider'\r\nimport createMuiTheme from \"@material-ui/core/styles/createMuiTheme\"\r\nimport CssBaseline from '@material-ui/core/CssBaseline'\r\n\r\nimport App from './components/App'\r\nimport theme from '../src/theme/theme'\r\n\r\nclass Root extends Component {\r\n    render() {\r\n        const themeMode = this.props.themeMode\r\n        const darkTheme = createMuiTheme({\r\n            ...theme,\r\n            palette: {\r\n                type: themeMode,\r\n            }\r\n        })\r\n        return (\r\n            <Provider store={this.props.store}>\r\n                <HashRouter>\r\n                    <MuiThemeProvider theme={darkTheme}>\r\n                        <CssBaseline />\r\n                        <App />\r\n                    </MuiThemeProvider>\r\n                </HashRouter>\r\n            </Provider>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    const { themeMode\r\n    } = state.theme\r\n    return {\r\n        themeMode\r\n    }\r\n}\r\nexport default connect(mapStateToProps, null)(Root)\r\n","const logger = store => next => action => {\r\n  console.group(action.type)\r\n  console.info('dispatching', action)\r\n  let result = next(action)\r\n  console.log('next state', store.getState())\r\n  console.groupEnd()\r\n  return result\r\n}\r\nexport default logger\r\n\r\n","const round = number => Math.round(number * 100) / 100\r\n\r\nconst monitorReducerEnhancer = createStore => (\r\n  reducer,\r\n  initialState,\r\n  enhancer\r\n) => {\r\n  const monitoredReducer = (state, action) => {\r\n    const start = performance.now()\r\n    const newState = reducer(state, action)\r\n    const end = performance.now()\r\n    const diff = round(end - start)\r\n\r\n    console.log('reducer process time:', diff)\r\n\r\n    return newState\r\n  }\r\n  return createStore(monitoredReducer, initialState, enhancer)\r\n}\r\nexport default monitorReducerEnhancer\r\n\r\n","import {\r\n    FETCHING_LOCATION,\r\n    LOCATION_ERROR,\r\n    FETCHED_LOCATION,\r\n    LOADING_DAILY_FORECAST,\r\n    DAILY_FORECAST_LOADED,\r\n    DAILY_FORECAST_ERROR,\r\n    LOADING_FIVE_DAY_FORECAST,\r\n    FIVE_DAY_FORECAST_LOADED,\r\n    FIVE_DAY_FORECAST_ERROR,\r\n    LOADING_CITIES_LIST,\r\n    CITIES_LIST_LOADED,\r\n    CITIES_LIST_ERROR,\r\n    GET_SELECTED_CITY\r\n} from './Home.actions'\r\n\r\nimport { LOAD_CITY_FROM_FAVORITES } from '../Favorites/Favorites.actions'\r\nimport { CONVERT_TO_FAHRENHEIT, CONVERT_TO_CELSIUM } from '../Home/celciumConverter.actions'\r\n\r\nlet initialState = {\r\n    cityKey: '',\r\n    city: '',\r\n    daily: [],\r\n    notification: '',\r\n    oneDay: {\r\n        date: '',\r\n        metricTemp: null,\r\n        imperialTemp: null,\r\n        text: '',\r\n        weatherIcon: null\r\n    }\r\n}\r\n\r\nexport const homeReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FETCHING_LOCATION:\r\n            return {\r\n                ...state,\r\n                notification: 'fetching data...'\r\n            }\r\n        case FETCHED_LOCATION:\r\n            return {\r\n                ...state,\r\n                cityKey: action.payload.Key,\r\n                city: action.payload.LocalizedName,\r\n                notification: null\r\n            }\r\n        case LOCATION_ERROR:\r\n            return {\r\n                ...state,\r\n                notification: action.payload\r\n            }\r\n        case LOADING_DAILY_FORECAST:\r\n            return {\r\n                ...state,\r\n                notification: 'loading daily forecast...'\r\n            }\r\n        case DAILY_FORECAST_LOADED:\r\n            const weekday = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\r\n            const date = new Date(action.payload[0].LocalObservationDateTime)\r\n            const metricTemp = Math.round(action.payload[0].Temperature.Metric.Value)\r\n            const imperialTemp = (action.payload[0].Temperature.Imperial.Value)\r\n            const text = (action.payload[0].WeatherText)\r\n            const oneDayIcon = (action.payload[0].WeatherIcon)\r\n            return {\r\n                ...state,\r\n                oneDay: {\r\n                    date: `${weekday[date.getDay()]} ${date.getHours()}:${date.getMinutes()}`,\r\n                    metricTemp: metricTemp,\r\n                    imperialTemp: imperialTemp,\r\n                    text: text,\r\n                    weatherIcon: oneDayIcon\r\n                },\r\n                notification: null\r\n            }\r\n        case DAILY_FORECAST_ERROR:\r\n            return {\r\n                ...state,\r\n                notification: action.payload\r\n            }\r\n        case LOADING_FIVE_DAY_FORECAST:\r\n            return {\r\n                ...state,\r\n                notification: 'loading five day forecast...'\r\n            }\r\n        case FIVE_DAY_FORECAST_LOADED:\r\n            const shortWeekday = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat']\r\n            let arr = []\r\n            action.payload.DailyForecasts.forEach(i => {\r\n                const date = new Date(i.Date)\r\n                const max = Math.round(i.Temperature.Maximum.Value)\r\n                const min = Math.round(i.Temperature.Minimum.Value)\r\n                const fiveDayIcon = i.Day.Icon\r\n                const fiveDaysArr = {\r\n                    date: `${shortWeekday[date.getDay()]}`,\r\n                    min: min,\r\n                    max: max,\r\n                    fiveDayIcon: fiveDayIcon\r\n                }\r\n                arr.push(fiveDaysArr)\r\n            })\r\n            return {\r\n                ...state,\r\n                daily: arr,\r\n                notification: null\r\n            }\r\n        case FIVE_DAY_FORECAST_ERROR:\r\n            return {\r\n                ...state,\r\n                notification: action.payload\r\n            }\r\n        case LOADING_CITIES_LIST:\r\n            return {\r\n                ...state,\r\n                notification: '...loading cities list'\r\n            }\r\n        case CITIES_LIST_LOADED:\r\n            return {\r\n                ...state,\r\n                notification: 'cities list loaded'\r\n            }\r\n        case CITIES_LIST_ERROR:\r\n            return {\r\n                ...state,\r\n                notification: action.payload\r\n            }\r\n        case GET_SELECTED_CITY:\r\n            const city = action.payload.label\r\n            const key = action.payload.key\r\n            return {\r\n                ...state,\r\n                city: city,\r\n                cityKey: key\r\n            }\r\n        case LOAD_CITY_FROM_FAVORITES:\r\n            return {\r\n                ...state,\r\n                city: action.payload[0],\r\n                cityKey: action.payload[1]\r\n            }\r\n        case CONVERT_TO_FAHRENHEIT:\r\n            return {\r\n                ...state,\r\n                daily: action.payload\r\n            }\r\n        case CONVERT_TO_CELSIUM:\r\n            return {\r\n                ...state,\r\n                daily: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n","import {\r\n    ADD_TO_FAVORITE,\r\n    DELETE_FROM_FAVORITE,\r\n    LOAD_FAVORITE_LIST,\r\n} from './Favorites.actions'\r\n\r\nlet initialState = {\r\n    favorites: [],\r\n    notification: ''\r\n}\r\nexport const favoritesReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_TO_FAVORITE:\r\n            return {\r\n                ...state,\r\n                notification: 'city is added'\r\n            }\r\n        case LOAD_FAVORITE_LIST:\r\n            return {\r\n                ...state,\r\n                favorites: action.payload\r\n            }\r\n        case DELETE_FROM_FAVORITE:\r\n            return {\r\n                ...state,\r\n                favorites: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import { combineReducers } from 'redux'\r\n\r\nimport {homeReducer} from '../components/Home/Home.reducer'\r\nimport {favoritesReducer} from '../components/Favorites/Favorites.reducer'\r\nimport { themeReducer } from '../theme/theme.reducer'\r\n\r\nconst rootReducer = combineReducers({\r\n    home:       homeReducer,\r\n    favorite:   favoritesReducer,\r\n    theme:      themeReducer\r\n})\r\nexport default rootReducer","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nimport './index.css'\r\n\r\nimport Root from './Root'\r\n\r\nimport configureStore from './configureStore'\r\n\r\nimport {getPosition} from '../src/components/Home/Home.actions'\r\n\r\nconst store = configureStore()\r\n\r\nstore.dispatch(getPosition())\r\n\r\nReactDOM.render(<Root store={store}/>, document.getElementById('root'))\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n","import { applyMiddleware, createStore } from 'redux'\r\n\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport loggerMiddleware from '../middleware/logger'\r\n\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport monitorReducersEnhancer from '../enhancers/monitorReducer'\r\n\r\nimport rootReducer from '../configureStore/root.reducer'\r\n\r\n\r\nexport default function configureStore() {\r\n\r\n    const middlewares = [thunkMiddleware, loggerMiddleware]\r\n    const middlewareEnhancer = applyMiddleware(...middlewares)\r\n\r\n    const enhancers = [middlewareEnhancer, monitorReducersEnhancer]\r\n    const composedEnhansers = composeWithDevTools(...enhancers)\r\n\r\n    const store = createStore(rootReducer, composedEnhansers)\r\n\r\n    return store\r\n}"],"sourceRoot":""}