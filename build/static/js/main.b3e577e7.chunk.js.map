{"version":3,"sources":["serviceWorker.js","components/Header/Header.styles.js","components/Header/Header.js","API/API.js","components/Favorites/Favorites.actions.js","theme.js","components/Home/Home.styles.js","components/Home/Home.js","components/Home/Home.actions.js","components/Favorites/Favorites.styles.js","components/Favorites/Favorites.js","components/App.js","middleware/logger.js","enhancers/monitorReducer.js","components/Home/Home.reducer.js","components/Favorites/Favorites.reducer.js","configureStore/root.reducer.js","index.js","configureStore/index.js"],"names":["Boolean","window","location","hostname","match","AppContainer","withStyles","root","position","boxShadow","AppBar","HTitle","color","fontWeight","flexGrow","whiteSpace","Typography","HButton","marginLeft","textDecoration","Button","AdapterLink","React","forwardRef","props","ref","innerRef","Header","Toolbar","to","component","API_KEY","process","API_HOST","autoCompleteUrl","query","autoCompleteUrlDaily","key","autoCompleteUrlFiveDay","autoCompleteUrlGeoPosition","lat","lon","getAutoComplete","a","axios","get","response","data","console","log","getGeoPosition","getDailyForecast","getFiveDayForecast","createMuiTheme","overrides","MuiAppBar","colorPrimary","backgroundColor","MuiCardContent","borderBottomColor","padding","SearchContainer","display","marginTop","justifyContent","marginBottom","Container","SearchPaper","flexDirection","width","Paper","ForecastContainer","maxWidth","ForecastPaper","OneDayGridContainer","theme","breakpoints","up","Grid","OneDayPaper","minWidth","down","FavoriteHiddenBtn","borderRadius","TypographyCity","fontSize","alignItems","TypographyDate","TypographyTemp","margin","AvatarIcon","alignSelf","Avatar","FButton","height","FIcon","FavoriteIcon","FTypography","fontFamily","FiveDayGridCont","overflow","flexWrap","FiveDayGridItem","FiveDayGrid","TypographyDay","TypographyMin","TypographyMax","Home","addFavoritesHandler","city","cityKey","doAddFavoritesHandler","prevProps","prevState","this","doLoadDailyForecast","doLoadFiveDayForecast","oneDay","daily","doLoadCitiesList","doGetSelectedCity","selectedCity","Fragment","value","loadOptions","onChange","container","item","style","onClick","date","temperature","unit","src","weatherIcon","alt","text","map","d","fiveDayIcon","min","max","Component","connect","state","home","notification","dispatch","type","then","payload","catch","err","message","loadDailyForecast","loadFiveDayForecast","inputValue","callback","tempArr","forEach","i","push","label","LocalizedName","Key","loadCitiesList","getSelectedCity","localStorage","setItem","addToFavorites","FDIcon","cursor","DeleteIcon","FContainer","ItemCard","Card","FGrid","maxHeight","FPaper","Favorites","getFavoriteCityHandler","doLoadFavoritesCity","history","deleteFavoritesHandler","arr","favorites","doDeleteFavoritesCity","length","doLoadFavoritesList","favorite","fav","Object","entries","removeItem","deleteFavoritesCity","loadFavoritesCity","App","exact","path","logger","store","next","action","group","info","result","getState","groupEnd","monitorReducerEnhancer","createStore","reducer","initialState","enhancer","number","start","performance","now","newState","end","diff","Math","round","rootReducer","combineReducers","weekday","Date","LocalObservationDateTime","Temperature","Imperial","Value","Unit","WeatherText","oneDayIcon","WeatherIcon","getDay","getHours","getMinutes","shortWeekday","DailyForecasts","Maximum","Minimum","Day","Icon","preloadedState","middlewares","thunkMiddleware","loggerMiddleware","enhancers","applyMiddleware","monitorReducersEnhancer","composedEnhansers","composeWithDevTools","configureStore","options","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","alert","coords","latitude","longitude","ReactDOM","render","CssBaseline","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b3e577e7.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { withStyles } from '@material-ui/core/styles'\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Button from '@material-ui/core/Button'\r\n\r\n\r\n\r\n\r\n\r\nexport const AppContainer = withStyles({\r\n    root: {\r\n        // background: 'white',\r\n        position: 'static',\r\n        boxShadow: '0px 2px 1px -1px rgba(0,0,0,0.12)'\r\n    }\r\n})(AppBar)\r\nexport const HTitle = withStyles({\r\n    root: {\r\n        color: 'grey',\r\n        fontWeight: 600,\r\n        flexGrow: 1,\r\n        whiteSpace: 'nowrap'\r\n    }\r\n})(Typography)\r\nexport const HButton = withStyles({\r\n    root: {\r\n        color: 'grey',\r\n        marginLeft: '5px',\r\n        textDecoration: 'none',\r\n        fontWeight: 400\r\n    }\r\n})(Button)","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { AppContainer, HTitle, HButton } from './Header.styles'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\n\r\nconst AdapterLink = React.forwardRef((props, ref) => <Link innerRef={ref} {...props} />)\r\nconst Header = () => {\r\n\r\n    return  <AppContainer>\r\n                <Toolbar>\r\n                    <HTitle>Forecast Application</HTitle>\r\n                    <HButton to='/' component={AdapterLink}>HOME</HButton>\r\n                    <HButton to='/favorites' component={AdapterLink}>FAVORITES</HButton>\r\n                </Toolbar>\r\n            </AppContainer>\r\n}\r\n\r\nexport default Header","import axios from 'axios'\r\n\r\nconst API_KEY     = process.env.REACT_APP_API_KEY\r\nconst API_HOST    = process.env.REACT_APP_API_HOST\r\nconst API_VERSION = process.env.REACT_APP_API_VERSION\r\n\r\nconst autoCompleteUrl            = (query)      => `${API_HOST}/locations/${API_VERSION}/cities/autocomplete?apikey=${API_KEY}&q=${query}`\r\nconst autoCompleteUrlDaily       = (key)        => `${API_HOST}/currentconditions/${API_VERSION}/${key}?apikey=${API_KEY}`\r\nconst autoCompleteUrlFiveDay     = (key)        => `${API_HOST}/forecasts/${API_VERSION}/daily/5day/${key}?apikey=${API_KEY}`\r\nconst autoCompleteUrlGeoPosition = (lat, lon)   => `${API_HOST}/locations/${API_VERSION}/cities/geoposition/search?apikey=${API_KEY}&q=${lat}%20%2C%20${lon}%20&toplevel=false`\r\n// const autoCompleteUrl       =  () => 'https://raw.githubusercontent.com/SejoB/Sergey-Bekker-04-09-2019/master/public/autoComplete.json'\r\n// const autoCompleteUrlDaily   =  () => 'https://raw.githubusercontent.com/SejoB/Sergey-Bekker-04-09-2019/master/public/currentWeather.json'\r\n// const autoCompleteUrlFiveDay =  () => 'https://raw.githubusercontent.com/SejoB/Sergey-Bekker-04-09-2019/master/public/5dayWeather.json'\r\n// const autoCompleteUrlGeoPosition = () => 'https://raw.githubusercontent.com/SejoB/Sergey-Bekker-04-09-2019/master/public/5dayWeather.json'\r\n\r\nexport const getAutoComplete = async (query) => {\r\n    try {\r\n        const response = await axios.get(autoCompleteUrl(query))\r\n        const data = await response.data\r\n        return data\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}\r\nexport const getGeoPosition = async (lat, lon) => {\r\n    try {\r\n        const response = await axios.get(autoCompleteUrlGeoPosition(lat, lon))\r\n        const data = await response.data\r\n        return data\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}\r\nexport const getDailyForecast = async (key) => {\r\n    try {\r\n        const response = await axios.get(autoCompleteUrlDaily(key))\r\n        const data = await response.data\r\n        return data\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}\r\nexport const getFiveDayForecast = async (key) => {\r\n    try {\r\n        const response = await axios.get(autoCompleteUrlFiveDay(key))\r\n        const data = await response.data\r\n        return data\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}\r\n\r\n\r\n","export const ADD_TO_FAVORITE = 'ADD_TO_FAVORITE'\r\nexport const DELETE_FROM_FAVORITE = 'DELETE_FROM_FAVORITE'\r\nexport const LOAD_FAVORITE_LIST = 'LOAD_FAVORITE_LIST'\r\nexport const LOAD_CITY_FROM_FAVORITES = 'LOAD_CITY_FROM_FAVORITES'\r\n\r\n\r\nexport const addToFavorites = (city, cityKey) => {\r\n    return dispatch => {\r\n        dispatch({ type: ADD_TO_FAVORITE })\r\n        localStorage.setItem(city, cityKey)\r\n    }\r\n}\r\nexport const loadFavoritesList = () => {\r\n    return dispatch => {\r\n        const fav = { ...localStorage }\r\n        const items = Object.entries(fav)\r\n        dispatch({\r\n            type: LOAD_FAVORITE_LIST,\r\n            payload: items\r\n        })\r\n    }\r\n}\r\nexport const deleteFavoritesCity = (value) => {\r\n    return dispatch => {\r\n       \r\n            localStorage.removeItem(value)\r\n            const fav = { ...localStorage }\r\n            const items = Object.entries(fav)\r\n            dispatch({\r\n                type: DELETE_FROM_FAVORITE,\r\n                payload: items\r\n            })\r\n        }\r\n}\r\nexport const loadFavoritesCity = (value) => {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: LOAD_CITY_FROM_FAVORITES,\r\n            payload: value\r\n        })\r\n    }\r\n}\r\n","import { createMuiTheme } from \"@material-ui/core/styles\";\r\n\r\nexport default createMuiTheme({\r\n  // palette: {\r\n  //   type: 'dark',\r\n  //   // type: 'light'\r\n  // },\r\n  overrides: {\r\n    MuiAppBar:{\r\n      colorPrimary: {\r\n        backgroundColor: 'transparent'\r\n      }\r\n    },\r\n    MuiCardContent: {\r\n      root: {\r\n        borderBottomColor: 'none',\r\n        \"&:last-child\": {\r\n          padding: '1rem !important',\r\n        }\r\n      }\r\n    }\r\n  }\r\n})\r\n\r\n// export default createMuiTheme","import { withStyles } from '@material-ui/core/styles'\r\nimport theme from './../../theme'\r\nimport Container from '@material-ui/core/Container'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Button from '@material-ui/core/Button'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Avatar from '@material-ui/core/Avatar'\r\nimport FavoriteIcon from '@material-ui/icons/Favorite'\r\n\r\n\r\nexport const SearchContainer = withStyles({\r\n    root: {\r\n        display: 'flex',\r\n        marginTop: '1.25rem',\r\n        justifyContent: 'center',\r\n        marginBottom: '1.25rem',\r\n        // minWidth: '22rem',\r\n    }\r\n})(Container)\r\nexport const SearchPaper = withStyles({\r\n    root: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        width: '30rem',\r\n        boxShadow: 'none'\r\n    }\r\n})(Paper)\r\nexport const ForecastContainer = withStyles({\r\n    root: {\r\n        maxWidth: '60rem',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        flexDirection: 'column',\r\n    }\r\n})(Container)\r\nexport const ForecastPaper = withStyles({\r\n    root: {\r\n        padding: '1rem',\r\n    }\r\n})(Paper)\r\nexport const OneDayGridContainer = withStyles({\r\n    root: {\r\n        justifyContent: 'space-between',\r\n        [theme.breakpoints.up('xs')]: {\r\n            width:'100%'\r\n        }\r\n    }\r\n})(Grid)\r\nexport const OneDayGridItem = withStyles({\r\n    root: {\r\n    }\r\n})(Grid)\r\nexport const OneDayPaper = withStyles({\r\n    root: {\r\n        padding: '0.5rem 1rem',\r\n        minWidth: '16.875rem',\r\n        [theme.breakpoints.down('xs')]: {\r\n            width:'100%'\r\n        }\r\n    }\r\n})(Paper)\r\nexport const FavoriteHiddenBtn = withStyles({\r\n    root: {\r\n        color: 'grey',\r\n        borderRadius: '25px'\r\n    }\r\n})(Button)\r\nexport const TypographyCity = withStyles({\r\n    root: {\r\n        fontSize: '1.5rem',\r\n        color: 'darkgrey',\r\n        fontWeight: 500,\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        whiteSpace: 'nowrap'\r\n    }\r\n})(Typography)\r\nexport const TypographyDate = withStyles({\r\n    root: {\r\n        fontSize: '1rem',\r\n        color: 'grey',\r\n        fontWeight: 300,\r\n    }\r\n})(Typography)\r\nexport const TypographyTemp = withStyles({\r\n    root: {\r\n        display: 'flex',\r\n        fontSize: '4rem',\r\n        margin: '0 0.3125rem 0 0',\r\n        justifyContent: 'flex-end',\r\n    }\r\n})(Typography)\r\nexport const AvatarIcon = withStyles({\r\n    root: {\r\n        alignSelf: 'center'\r\n    }\r\n})(Avatar)\r\nexport const FButton =  withStyles({\r\n    root: {\r\n        height: '2.2rem',\r\n        marginTop: '1.25rem',\r\n        whiteSpace: 'nowrap',\r\n        color: 'grey',\r\n        boxShadow: '0px 1px 3px 0px rgba(0,0,0,0.2), 0px 1px 1px 0px rgba(0,0,0,0.14), 0px 2px 1px -1px rgba(0,0,0,0.12)',\r\n        [theme.breakpoints.down('xs')]: {\r\n            display: 'none'\r\n          }\r\n    }\r\n})(Button)\r\nexport const FIcon = withStyles({\r\n    root: {\r\n        display: 'none',\r\n        [theme.breakpoints.down('xs')]: {\r\n            display: 'inline-block'\r\n        }\r\n    }\r\n})(FavoriteIcon)\r\n\r\nexport const FTypography = withStyles({\r\n    root: {\r\n        fontSize: '1.5rem',\r\n        display: 'flex',\r\n        fontFamily: 'inherit',\r\n        justifyContent: 'flex-end'\r\n    }\r\n})(Typography)\r\nexport const FiveDayGridCont = withStyles({\r\n    root: {\r\n        justifyContent: 'space-evenly',\r\n        display: 'flex',\r\n        marginTop: '3rem',\r\n        [theme.breakpoints.down('xs')]: {\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            overflow: 'scroll',\r\n            height: '14.6875rem',\r\n            flexWrap: 'inherit',\r\n            justifyContent: 'flex-start',\r\n            marginTop: '1rem'\r\n        }\r\n    }\r\n})(Grid)\r\nexport const FiveDayGridItem = withStyles({\r\n    root: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        minWidth: '4rem'\r\n    }\r\n})(Grid)\r\nexport const FiveDayGrid = withStyles({\r\n    root: {\r\n        display: 'flex',\r\n        justifyContent: 'space-around'\r\n    }\r\n})(Grid)\r\nexport const TypographyDay = withStyles({\r\n    root: {\r\n        fontWeight: 500,\r\n        color: 'darkgrey',\r\n        alignSelf: 'center'\r\n    }\r\n})(Typography)\r\nexport const TypographyMin = withStyles({\r\n    root: {\r\n        fontWeight: 400,\r\n        color: 'darkgrey',\r\n        alignSelf: 'center'\r\n    }\r\n})(Typography)\r\nexport const TypographyMax = withStyles({\r\n    root: {\r\n        fontWeight: 400,\r\n        color: 'grey',\r\n        alignSelf: 'center'\r\n    }\r\n})(Typography)","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { loadDailyForecast, loadFiveDayForecast, loadCitiesList, getSelectedCity } from './Home.actions'\r\nimport { addToFavorites } from '../Favorites/Favorites.actions'\r\n\r\n\r\nimport { FIcon, AvatarIcon, FavoriteHiddenBtn, OneDayPaper, TypographyCity, FiveDayGrid, \r\n         FiveDayGridCont, FiveDayGridItem, TypographyDate, TypographyTemp, SearchContainer, \r\n         ForecastContainer, ForecastPaper, SearchPaper, OneDayGridContainer, FButton, FTypography, \r\n         TypographyDay, TypographyMax, TypographyMin } from './Home.styles'\r\nimport { Paper, Container, Grid } from '@material-ui/core'\r\nimport AsyncSelect from 'react-select/async'\r\n\r\n\r\nclass Home extends Component {\r\n\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        let cityKey = this.props.cityKey\r\n        if (this.props.cityKey !== prevProps.cityKey) {\r\n            this.props.doLoadDailyForecast(cityKey)\r\n            this.props.doLoadFiveDayForecast(cityKey)\r\n        }\r\n    }\r\n    addFavoritesHandler = () => {\r\n        const { city, cityKey, doAddFavoritesHandler} = this.props\r\n        doAddFavoritesHandler(city, cityKey)\r\n    }\r\n\r\n    render() {\r\n        const { oneDay, daily, city } = this.props\r\n        const { doLoadCitiesList, doGetSelectedCity, selectedCity } = this.props\r\n        return (\r\n            <React.Fragment>\r\n                <Container>\r\n                    <SearchContainer>\r\n                        <SearchPaper>\r\n                            <AsyncSelect\r\n                                value={selectedCity}\r\n                                loadOptions={doLoadCitiesList}\r\n                                onChange={doGetSelectedCity}\r\n                            />\r\n                        </SearchPaper>\r\n                    </SearchContainer>\r\n                    <ForecastContainer>\r\n                        <ForecastPaper>\r\n                            <OneDayGridContainer container>\r\n                                <OneDayPaper>\r\n                                    <Grid item style={{ justifyContent: 'space-between', flexWrap: 'nowrap', display: 'flex' }}>\r\n                                        <TypographyCity>{city}</TypographyCity>\r\n                                        <FavoriteHiddenBtn>\r\n                                            <FIcon onClick={this.addFavoritesHandler}></FIcon>\r\n                                        </FavoriteHiddenBtn>\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <TypographyDate>{oneDay.date}</TypographyDate>\r\n                                        <TypographyTemp>{oneDay.temperature}{oneDay.unit}{'°'}</TypographyTemp>\r\n                                        <FTypography component='div'>\r\n                                            <AvatarIcon src={\"https://raw.githubusercontent.com/SejoB/Sergey-Bekker-04-09-2019/master/public/weatherIcons/\" + oneDay.weatherIcon + \"-s.png\"} alt='icon' />\r\n                                            {oneDay.text}\r\n                                        </FTypography>\r\n                                    </Grid>\r\n                                </OneDayPaper>\r\n                                <Grid item>\r\n                                    <FButton onClick={this.addFavoritesHandler}>Add to Favorites</FButton>\r\n                                </Grid>\r\n                            </OneDayGridContainer>\r\n                            <FiveDayGridCont container>\r\n                                {daily.map((d, key) => {\r\n                                    return <Paper key={key} style={{ padding: '0.5rem', margin: '0.5rem' }}>\r\n                                        <FiveDayGridItem item>\r\n                                            <AvatarIcon src={\"https://raw.githubusercontent.com/SejoB/Sergey-Bekker-04-09-2019/master/public/weatherIcons/\" + d.fiveDayIcon + \"-s.png\"} alt='icon' />\r\n                                            <TypographyDay>{d.date}</TypographyDay>\r\n                                            <FiveDayGrid>\r\n                                                <TypographyMin>{d.min}{'°'}</TypographyMin>\r\n                                                <TypographyMax>{d.max}{'°'}</TypographyMax>\r\n                                            </FiveDayGrid>\r\n                                        </FiveDayGridItem>\r\n                                    </Paper>\r\n                                })}\r\n                            </FiveDayGridCont>\r\n                        </ForecastPaper>\r\n                    </ForecastContainer>\r\n                </Container>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    const {\r\n        cityKey,\r\n        city,\r\n        oneDay,\r\n        daily,\r\n        notification\r\n    } = state.home\r\n    return {\r\n        cityKey,\r\n        city,\r\n        oneDay,\r\n        daily,\r\n        notification\r\n\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        doLoadDailyForecast:    (cityKey)               => dispatch(loadDailyForecast(cityKey)),\r\n        doLoadFiveDayForecast:  (cityKey)               => dispatch(loadFiveDayForecast(cityKey)),\r\n        doLoadCitiesList:       (inputValue, callback)  => dispatch(loadCitiesList(inputValue, callback)),\r\n        doGetSelectedCity:      (selectedCity)          => dispatch(getSelectedCity(selectedCity)),\r\n        doAddFavoritesHandler:  (city, cityKey)         => dispatch(addToFavorites(city, cityKey))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home)\r\n\r\n","import { getDailyForecast, getFiveDayForecast, getGeoPosition, getAutoComplete } from '../../API/API'\r\n\r\n\r\nexport const FETCHING_LOCATION = 'FETCHING_LOCATION'\r\nexport const FETCHED_LOCATION = 'FETCHED_LOCATION'\r\nexport const LOCATION_ERROR = 'LOCATION_ERROR'\r\n\r\nexport const LOADING_DAILY_FORECAST = 'LOADING_DAILY_FORECAST'\r\nexport const DAILY_FORECAST_LOADED = 'DAILY_FORECAST_LOADED'\r\nexport const DAILY_FORECAST_ERROR = 'DAILY_FORECAST_ERROR'\r\n\r\nexport const LOADING_FIVE_DAY_FORECAST = 'LOADING_FIVE_DAY_FORECAST'\r\nexport const FIVE_DAY_FORECAST_LOADED = 'FIVE_DAY_FORECAST_LOADED'\r\nexport const FIVE_DAY_FORECAST_ERROR = 'FIVE_DAY_FORECAST_ERROR'\r\n\r\nexport const LOADING_CITIES_LIST = 'LOADING_CITIES_LIST'\r\nexport const CITIES_LIST_LOADED = 'CITIES_LIST_LOADED'\r\nexport const CITIES_LIST_ERROR = 'CITIES_LIST_ERROR'\r\n\r\nexport const GET_SELECTED_CITY = 'GET_SELECTED_CITY'\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const getPosition = () => {\r\n    return (dispatch) => {\r\n\r\n        dispatch({ type: FETCHING_LOCATION })\r\n\r\n        const getLatLon = function (options) {\r\n            return new Promise(function (resolve, reject) {\r\n                if (navigator.geolocation) {\r\n                    navigator.geolocation.getCurrentPosition(resolve, reject, options)\r\n                } else {\r\n                    alert('Geolocation is not enabled')\r\n                }\r\n            })\r\n        }\r\n        getLatLon()\r\n            .then((position) => {\r\n                const lat = position.coords.latitude\r\n                const lon = position.coords.longitude\r\n                getGeoPosition(lat, lon)\r\n                    .then(data =>\r\n                        dispatch({\r\n                            type: FETCHED_LOCATION,\r\n                            payload: data\r\n                        })\r\n                    )\r\n            })\r\n            .catch(err =>\r\n                dispatch({\r\n                    type: LOCATION_ERROR,\r\n                    payload: err.message\r\n                })\r\n            )\r\n    }\r\n}\r\nexport const loadDailyForecast = (cityKey) => {\r\n\r\n    return dispatch => {\r\n\r\n        dispatch({ type: LOADING_DAILY_FORECAST })\r\n\r\n        getDailyForecast(cityKey)\r\n            .then((data) => {\r\n                dispatch({\r\n                    type: DAILY_FORECAST_LOADED,\r\n                    payload: data\r\n                })\r\n            })\r\n            .catch(err =>\r\n                dispatch({\r\n                    type: DAILY_FORECAST_ERROR,\r\n                    payload: err.message\r\n                })\r\n            )\r\n    }\r\n}\r\nexport const loadFiveDayForecast = (cityKey) => {\r\n\r\n    return dispatch => {\r\n\r\n        dispatch({ type: LOADING_FIVE_DAY_FORECAST })\r\n\r\n        getFiveDayForecast(cityKey)\r\n            .then((data) => {\r\n                dispatch({\r\n                    type: FIVE_DAY_FORECAST_LOADED,\r\n                    payload: data\r\n                })\r\n            })\r\n            .catch(err =>\r\n                dispatch({\r\n                    type: FIVE_DAY_FORECAST_ERROR,\r\n                    payload: err.message\r\n                })\r\n            )\r\n    }\r\n}\r\nexport const loadCitiesList = (inputValue, callback) => {\r\n\r\n    return dispatch => {\r\n        dispatch({ type: LOADING_CITIES_LIST })\r\n\r\n        let tempArr = []\r\n        getAutoComplete(inputValue)\r\n            .then((data) => {\r\n                dispatch({\r\n                    type: CITIES_LIST_LOADED,\r\n                })\r\n                data.forEach(i => {\r\n                    tempArr.push({ label: i.LocalizedName, key: i.Key })\r\n                })\r\n                callback(tempArr)\r\n            })\r\n            .catch(err =>\r\n                dispatch({\r\n                    type: CITIES_LIST_ERROR,\r\n                    payload: err.message\r\n                })\r\n            )\r\n    }\r\n}\r\nexport const getSelectedCity = (selectedCity) => {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: GET_SELECTED_CITY,\r\n            payload: selectedCity\r\n        })\r\n    }\r\n}\r\n","import { withStyles } from '@material-ui/core/styles'\r\n\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport  Typography from '@material-ui/core/Typography'\r\nimport  Grid from '@material-ui/core/Grid'\r\nimport  Paper from '@material-ui/core/Paper'\r\nimport  Container from '@material-ui/core/Container'\r\nimport  Card from '@material-ui/core/Card'\r\n\r\n\r\nexport const FDIcon = withStyles({\r\n    root: {\r\n        cursor: 'pointer',\r\n        color: 'darkgrey'\r\n    }\r\n})(DeleteIcon)\r\nexport const FContainer = withStyles({\r\n    root: {\r\n        display: 'flex',\r\n        maxWidth: '38rem'\r\n    }\r\n})(Container)\r\nexport const ItemCard = withStyles({\r\n    root: {\r\n        height: '4rem',\r\n        width: '20rem',\r\n        margin: '1rem 0 1rem 0',\r\n        padding: '1rem',\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center'\r\n    }\r\n})(Card)\r\nexport const FTypography = withStyles({\r\n    root: {\r\n        fontSize: '2rem',\r\n        color: 'darkgrey',\r\n        fontWeight: 500,\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        cursor: 'pointer'\r\n    }\r\n})(Typography)\r\nexport const FGrid = withStyles({\r\n    root: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        maxHeight: '85vh',\r\n        flexWrap: 'nowrap',\r\n        padding: '0 2rem 0 2rem',\r\n        overflow: 'overlay'\r\n    }\r\n})(Grid)\r\nexport const FPaper = withStyles({\r\n    root: {\r\n        marginTop: '1rem'\r\n    }\r\n})(Paper)","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport {loadFavoritesList, deleteFavoritesCity, loadFavoritesCity} from './Favorites.actions'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport { FContainer, ItemCard, FTypography, FPaper, FGrid, FDIcon } from './Favorites.styles'\r\n\r\n\r\nclass Favorites extends Component {\r\n\r\n    \r\n\r\n    componentDidMount() {\r\n        this.props.doLoadFavoritesList()\r\n    }\r\n    \r\n    getFavoriteCityHandler = (value) => {\r\n        this.props.doLoadFavoritesCity(value)\r\n        this.props.history.push('/')\r\n    }\r\n    deleteFavoritesHandler = (value) => {\r\n        const arr = this.props.favorites\r\n        this.props.doDeleteFavoritesCity(value)\r\n        if(arr.length <= 1){\r\n            this.props.history.push('/')\r\n        }\r\n    }\r\n    render() {\r\n        const favorites = this.props.favorites\r\n        return (\r\n        <FContainer>\r\n            <FPaper>\r\n                <FGrid container>\r\n                    {favorites.map((value, key) => (\r\n                        <Grid item key={key}>\r\n                            <ItemCard>\r\n                                <FTypography onClick={() => this.getFavoriteCityHandler(value)}>{value[0]}</FTypography>\r\n                                <FDIcon      onClick={() => this.deleteFavoritesHandler(value[0])}/>\r\n                            </ItemCard>\r\n                        </Grid>\r\n                    ))}\r\n                </FGrid>\r\n            </FPaper>\r\n        </FContainer>\r\n\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    const {\r\n        favorites\r\n    } = state.favorite\r\n    return {\r\n        favorites\r\n\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        doLoadFavoritesList:        ()      => dispatch(loadFavoritesList()),\r\n        doDeleteFavoritesCity:      (value) => dispatch(deleteFavoritesCity(value)),\r\n        doLoadFavoritesCity:        (value) => dispatch(loadFavoritesCity(value))\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Favorites)\r\n","import React, { Component } from 'react'\r\nimport { Route, Switch } from \"react-router-dom\"\r\n\r\nimport Header from './Header/Header'\r\nimport Home from './Home/Home'\r\nimport Favorites from './Favorites/Favorites'\r\n\r\nclass App extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Header />\r\n        <Switch>\r\n          <Route exact path='/' component={Home}></Route>\r\n          <Route path='/favorites' component={Favorites}></Route>\r\n          <Route exact path='/' component={Home}></Route>\r\n        </Switch>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default App\r\n","const logger = store => next => action => {\r\n    console.group(action.type)\r\n    console.info('dispatching', action)\r\n    let result = next(action)\r\n    console.log('next state', store.getState())\r\n    console.groupEnd()\r\n    return result\r\n  }\r\nexport default logger","const round = number => Math.round(number * 100) / 100\r\n\r\nconst monitorReducerEnhancer = createStore => (\r\n  reducer,\r\n  initialState,\r\n  enhancer\r\n) => {\r\n  const monitoredReducer = (state, action) => {\r\n    const start = performance.now()\r\n    const newState = reducer(state, action)\r\n    const end = performance.now()\r\n    const diff = round(end - start)\r\n\r\n    console.log('reducer process time:', diff)\r\n\r\n    return newState\r\n  }\r\n\r\n  return createStore(monitoredReducer, initialState, enhancer)\r\n}\r\n\r\nexport default monitorReducerEnhancer\r\n\r\n","import {\r\n    FETCHING_LOCATION,\r\n    LOCATION_ERROR,\r\n    FETCHED_LOCATION,\r\n    LOADING_DAILY_FORECAST,\r\n    DAILY_FORECAST_LOADED,\r\n    DAILY_FORECAST_ERROR,\r\n    LOADING_FIVE_DAY_FORECAST,\r\n    FIVE_DAY_FORECAST_LOADED,\r\n    FIVE_DAY_FORECAST_ERROR,\r\n    LOADING_CITIES_LIST,\r\n    CITIES_LIST_LOADED,\r\n    CITIES_LIST_ERROR,\r\n    GET_SELECTED_CITY\r\n} from './Home.actions'\r\n\r\nimport {LOAD_CITY_FROM_FAVORITES} from '../Favorites/Favorites.actions'\r\n\r\nlet initialState = {\r\n    cityKey: '',\r\n    city: '',\r\n    daily: [],\r\n    notification: '',\r\n    oneDay: {\r\n        date: '',\r\n        temperature: null,\r\n        text: '',\r\n        unit: '',\r\n        weatherIcon: null\r\n    }\r\n}\r\n\r\n\r\nexport const homeReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FETCHING_LOCATION:\r\n            return {\r\n                ...state,\r\n                notification: 'fetching data...'\r\n            }\r\n        case FETCHED_LOCATION:\r\n            return {\r\n                ...state,\r\n                cityKey: action.payload.Key,\r\n                city: action.payload.LocalizedName,\r\n                notification: null\r\n            }\r\n        case LOCATION_ERROR:\r\n            return {\r\n                ...state,\r\n                notification: action.payload\r\n            }\r\n        case LOADING_DAILY_FORECAST:\r\n            return {\r\n                ...state,\r\n                notification: 'loading daily forecast...'\r\n            }\r\n        case DAILY_FORECAST_LOADED:\r\n            const weekday = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\r\n            const date = new Date(action.payload[0].LocalObservationDateTime)\r\n            const temperature = (action.payload[0].Temperature.Imperial.Value)\r\n            const unit = (action.payload[0].Temperature.Imperial.Unit)\r\n            const text = (action.payload[0].WeatherText)\r\n            const oneDayIcon = (action.payload[0].WeatherIcon)\r\n            return {\r\n                ...state,\r\n                oneDay: {\r\n                    date: `${weekday[date.getDay()]} ${date.getHours()}:${date.getMinutes()}`,\r\n                    temperature: temperature,\r\n                    text: text,\r\n                    unit: unit,\r\n                    weatherIcon: oneDayIcon\r\n                },\r\n                notification: null\r\n            }\r\n        case DAILY_FORECAST_ERROR:\r\n            return {\r\n                ...state,\r\n                notification: action.payload\r\n            }\r\n        case LOADING_FIVE_DAY_FORECAST:\r\n            return {\r\n                ...state,\r\n                notification: 'loading five day forecast...'\r\n            }\r\n        case FIVE_DAY_FORECAST_LOADED:\r\n            const shortWeekday = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat']\r\n            let arr = []\r\n            action.payload.DailyForecasts.forEach(i => {\r\n                const date = new Date(i.Date)\r\n                const max = i.Temperature.Maximum.Value\r\n                const min = i.Temperature.Minimum.Value\r\n                const fiveDayIcon = i.Day.Icon\r\n                arr.push({\r\n                    date: `${shortWeekday[date.getDay()]}`,\r\n                    min: min,\r\n                    max: max,\r\n                    fiveDayIcon: fiveDayIcon\r\n                })\r\n            })\r\n            return {\r\n                ...state,\r\n                daily: arr,\r\n                notification: null\r\n            }\r\n        case FIVE_DAY_FORECAST_ERROR:\r\n            return {\r\n                ...state,\r\n                notification: action.payload\r\n            }\r\n        case LOADING_CITIES_LIST:\r\n            return {\r\n                ...state,\r\n                notification: '...loading cities list'\r\n            }\r\n        case CITIES_LIST_LOADED:\r\n            return {\r\n                ...state,\r\n                notification: 'cities list loaded'\r\n            }\r\n        case CITIES_LIST_ERROR:\r\n            return {\r\n                ...state,\r\n                notification: action.payload\r\n            }\r\n        case GET_SELECTED_CITY:\r\n                const city = action.payload.label\r\n                const key  = action.payload.key\r\n            return {\r\n                ...state,\r\n                city:    city,\r\n                cityKey: key\r\n            }\r\n        case LOAD_CITY_FROM_FAVORITES:\r\n            return {\r\n                ...state,\r\n                city:    action.payload[0],\r\n                cityKey: action.payload[1]\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n","import {\r\n    ADD_TO_FAVORITE,\r\n    DELETE_FROM_FAVORITE,\r\n    LOAD_FAVORITE_LIST,\r\n} from './Favorites.actions'\r\n\r\nlet initialState = {\r\n    favorites: [],\r\n    notification: ''\r\n}\r\n\r\nexport const favoritesReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_TO_FAVORITE:\r\n            return {\r\n                ...state,\r\n                notification: 'city is added'\r\n            }\r\n        case LOAD_FAVORITE_LIST:\r\n            console.log(action.payload)\r\n            return {\r\n                ...state, \r\n                favorites: action.payload\r\n            }\r\n        case DELETE_FROM_FAVORITE:\r\n            return {\r\n                ...state,\r\n                favorites: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import { combineReducers } from 'redux'\r\n\r\nimport {homeReducer} from '../components/Home/Home.reducer'\r\nimport {favoritesReducer} from '../components/Favorites/Favorites.reducer'\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    home:       homeReducer,\r\n    favorite:   favoritesReducer\r\n})\r\n\r\nexport default rootReducer","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { HashRouter } from 'react-router-dom'\r\nimport { Provider } from 'react-redux'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nimport './index.css'\r\nimport CssBaseline from '@material-ui/core/CssBaseline'\r\nimport MuiThemeProvider from '@material-ui/core/styles/MuiThemeProvider'\r\n\r\nimport App from './components/App'\r\nimport theme from '../src/theme'\r\nimport configureStore from './configureStore'\r\n\r\nimport {getPosition} from '../src/components/Home/Home.actions'\r\n\r\n\r\nconst store = configureStore()\r\n\r\nstore.dispatch(getPosition())\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <HashRouter>\r\n            <MuiThemeProvider theme={theme}>\r\n                <CssBaseline />\r\n                <App />\r\n            </MuiThemeProvider>\r\n        </HashRouter>\r\n    </Provider>\r\n    , document.getElementById('root'))\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n","import { applyMiddleware, createStore } from 'redux'\r\n\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport loggerMiddleware from '../middleware/logger'\r\n\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport monitorReducersEnhancer from '../enhancers/monitorReducer'\r\n\r\nimport rootReducer from '../configureStore/root.reducer'\r\n\r\n\r\nexport default function configureStore(preloadedState) {\r\n\r\n    const middlewares = [thunkMiddleware, loggerMiddleware]\r\n    const middlewareEnhancer = applyMiddleware(...middlewares)\r\n\r\n    const enhancers = [middlewareEnhancer, monitorReducersEnhancer]\r\n    const composedEnhansers = composeWithDevTools(...enhancers)\r\n\r\n    const store = createStore(rootReducer, preloadedState, composedEnhansers)\r\n\r\n    return store\r\n}"],"sourceRoot":""}